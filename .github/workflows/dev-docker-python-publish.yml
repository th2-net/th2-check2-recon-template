name: Dev build and publish Docker distributions to Github Container Registry ghcr.io

on:
  push:
    branches-ignore:
      - master
#    paths:
#    - gradle.properties
#    - package_info.json

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}
      - run: echo "::set-output name=REPOSITORY_NAME::$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')"
        id: meta
      - name: Get package version
        id: pack_ver
        uses: notiz-dev/github-action-json-property@release
        with:
          path: package_info.json
          prop_path: package_version
      - name: Generate .proto description json
        id: proto_json
        run: |
          pip install -r requirements.txt
          pip install th2-box-descriptor-generator==0.0.1.dev2346263217
          python3 -m th2_box_descriptor_generator.generate_service_descriptions
          echo "::set-output name=DESCRIPTION_JSON::$(cat service_proto_description.json)"
      - name: Build custom package version
        id: release_ver
        run: echo ::set-output name=value::"${{ steps.pack_ver.outputs.prop }}.dev${{ github.run_id }}"
      - name: Show package version
        run: echo ${{ steps.release_ver.outputs.value }}
      - name: Set version for current build in package_info.json
        uses: MerthinTechnologies/edit-json-action@v1
        with:
          filename: './package_info.json'
          key: 'package_version'
          value: ${{ steps.release_ver.outputs.value }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          build-args: ${{ steps.proto_json.outputs.DESCRIPTION_JSON }}
          push: true
          tags: ghcr.io/${{ github.repository }}:${{ steps.release_ver.outputs.value }}
          labels: com.exactpro.th2.${{ steps.meta.outputs.REPOSITORY_NAME }}=${{ steps.pack_ver.outputs.value }}